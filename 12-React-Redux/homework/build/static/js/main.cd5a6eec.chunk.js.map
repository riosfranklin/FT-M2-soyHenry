{"version":3,"sources":["actions/index.js","components/Favorites/Favorites.js","components/Buscador/Buscador.js","components/NavBar/NavBar.js","components/Movie/Movie.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["ADD_MOVIE_FAVORITE","REMOVE_MOVIE_FAVORITE","GET_MOVIES","GET_MOVIE_DETAIL","ConnectedList","className","this","props","movies","map","movie","src","img","id","to","title","onClick","removeMovieFavorite","Component","connect","state","moviesFavourites","dispatch","type","payload","Buscador","event","setState","target","value","preventDefault","getMovies","onSubmit","e","handleSubmit","htmlFor","autoComplete","onChange","handleChange","Poster","imdbID","Title","addMovieFavorite","key","moviesLoaded","titulo","fetch","then","response","json","NavBar","width","height","alt","exact","href","Movie","movieId","match","params","getMovieDetail","Rated","Year","Plot","Genre","Director","Writer","Actors","imdbRating","React","movieDetail","idMovie","App","Fragment","path","component","Favorites","Boolean","window","location","hostname","initialState","reducer","action","Search","filter","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd5a6eec.chunk.js","sourcesContent":["export const ADD_MOVIE_FAVORITE = \"ADD_MOVIE_FAVORITE\";\r\nexport const REMOVE_MOVIE_FAVORITE = \"REMOVE_MOVIE_FAVORITE\";\r\nexport const GET_MOVIES = \"GET_MOVIES\";\r\nexport const GET_MOVIE_DETAIL = \"GET_MOVIE_DETAIL\";\r\n\r\nexport function addMovieFavorite(payload) {\r\n  return { type: ADD_MOVIE_FAVORITE, payload };\r\n}\r\n\r\nexport function removeMovieFavorite(payload) {\r\n  return { type: REMOVE_MOVIE_FAVORITE, payload };\r\n}\r\n\r\nexport function getMovies(titulo) {\r\n  return function (dispatch) {\r\n    return fetch(\"http://www.omdbapi.com/?apikey=b99de5b3&s=\" + titulo)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({ type: GET_MOVIES, payload: json });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getMovieDetail(idMovie) {\r\n  return function (dispatch) {\r\n    return fetch(\"http://www.omdbapi.com/?apikey=b99de5b3&i=\" + idMovie)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({ type: GET_MOVIE_DETAIL, payload: json });\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Favorites.css\";\nimport { removeMovieFavorite } from \"../../actions\";\n\nexport class ConnectedList extends Component {\n  render() {\n    return (\n      <div className=\"cnt\">\n        <h2>Películas Favoritas</h2>\n        <div className=\"main-container\">\n          {this.props.movies?.map((movie) => {\n            return (\n              <>\n                <img src={movie.img} id=\"img\" />\n                <div className=\"list-item\">\n                  <NavLink to={`/movie/${movie.id}`}>{movie.title}</NavLink>\n                  <button\n                    onClick={() => {\n                      this.props.removeMovieFavorite(movie.id);\n                    }}\n                  >\n                    Eliminar de Favs\n                  </button>\n                </div>\n              </>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.moviesFavourites,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeMovieFavorite: (movie) => dispatch(removeMovieFavorite(movie)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectedList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Buscador.css\";\nimport { addMovieFavorite, getMovies } from \"../../actions/index\";\n\nexport class Buscador extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n  }\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.getMovies(this.state.title);\n  }\n\n  render() {\n    const { title } = this.state;\n    return (\n      <div className=\"cnt\">\n        <h2>Buscador</h2>\n        <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div>\n            <label className=\"label\" htmlFor=\"title\">\n              Película:{\" \"}\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              autoComplete=\"off\"\n              value={title}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <button type=\"submit\">Buscar</button>\n        </form>\n        <div className=\"main-container\">\n          {this.props.movies?.map((movie) => {\n            return (\n              <>\n                <img src={movie.Poster} id=\"img\" />\n                <div className=\"list-item\">\n                  <NavLink to={`/movie/${movie.imdbID}`}>\n                    <span>{movie.Title}</span>\n                  </NavLink>\n                  <button\n                    onClick={() =>\n                      this.props.addMovieFavorite({\n                        title: movie.Title,\n                        id: movie.imdbID,\n                        key: movie.imdbID,\n                        img: movie.Poster,\n                      })\n                    }\n                  >\n                    Añadir a Favs\n                  </button>\n                </div>\n              </>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.moviesLoaded,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addMovieFavorite: (movie) => dispatch(addMovieFavorite(movie)),\n    getMovies: (title) => dispatch(getMovies(title)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Buscador);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./Navbar.css\";\n\nexport default function NavBar() {\n  return (\n    <header className=\"navbar\">\n      <div>\n        <img\n          id=\"logo\"\n          src=\"https://img.freepik.com/vector-premium/logotipo-camara-pelicula_7108-42.jpg\"\n          width=\"150\"\n          height=\"150\"\n          alt=\"\"\n        />\n      </div>\n      <nav>\n        <ul className=\"list\">\n          <li className=\"list-item\">\n            <NavLink exact to=\"/\">\n              Home\n            </NavLink>\n            <NavLink to=\"/favs\">Favoritas</NavLink>\n            <a href=\"https://github.com/luqasmagra\">Contacto</a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getMovieDetail } from \"../../actions/index\";\n\nimport \"./Movie.css\";\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    const movieId = this.props.match.params.id;\n    this.props.getMovieDetail(movieId);\n  }\n  render() {\n    const movie = this.props.movie;\n    return (\n      <div className=\"container details movie-card\">\n        <h1 className=\"title\">\n          {movie.Title}\n          <span>{movie.Rated}</span>\n        </h1>\n        <span>{movie.Year}</span>\n        <p>{movie.Plot}</p>\n        <div className=\"description container2\">\n          <img src={movie.Poster} alt=\"movie poster\" />\n          <ul className=\"column\">\n            <li>Genero/s: {movie.Genre}</li>\n            <li>Director/es: {movie.Director}</li>\n            <li>Escritor/es: {movie.Writer}</li>\n            <li>Actores: {movie.Actors}</li>\n            <li>Rating: {movie.imdbRating} imdB</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movie: state.movieDetail,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getMovieDetail: (movie) => dispatch(getMovieDetail(movie)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\n","import React from \"react\";\n\nimport Favorites from \"./components/Favorites/Favorites\";\nimport Buscador from \"./components/Buscador/Buscador\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { Route } from \"react-router-dom\";\nimport Movie from \"./components/Movie/Movie\";\n\nfunction App() {\n  return (\n      <React.Fragment>\n          <NavBar />\n          <Route exact path=\"/\" component={Buscador} />\n          <Route path=\"/favs\" component={Favorites} />\n          <Route path=\"/movie/:id\" component={Movie} />\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  ADD_MOVIE_FAVORITE,\r\n  REMOVE_MOVIE_FAVORITE,\r\n  GET_MOVIES,\r\n  GET_MOVIE_DETAIL,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  moviesFavourites: [],\r\n  moviesLoaded: [],\r\n  movieDetail: {},\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MOVIE_FAVORITE:\r\n      return {\r\n        ...state,\r\n        moviesFavourites: [...state.moviesFavourites, action.payload],\r\n      };\r\n\r\n    case GET_MOVIES:\r\n      return {\r\n        ...state,\r\n        moviesLoaded: action.payload.Search,\r\n      };\r\n    case REMOVE_MOVIE_FAVORITE:\r\n      return {\r\n        ...state,\r\n        moviesFavourites: state.moviesFavourites.filter(\r\n          (movie) => movie.id !== action.payload\r\n        ),\r\n      };\r\n    case GET_MOVIE_DETAIL:\r\n      return {\r\n        ...state,\r\n        movieDetail: action.payload,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\n// import rootReducer from \"../reducers/index\";\n// import thunk from \"redux-thunk\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducer from \"../reducers/index\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancer(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}